<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>jax on wity&#39;ai</title>
    <link>https://varun-ml.github.io/tags/jax/</link>
    <description>Recent content in jax on wity&#39;ai</description>
    <image>
      <url>https://varun-ml.github.io/images/varun.png</url>
      <link>https://varun-ml.github.io/images/varun.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 09 Dec 2022 17:38:58 +0530</lastBuildDate><atom:link href="https://varun-ml.github.io/tags/jax/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Denoising Diffusion Models Part 3: Generating Characters and numbers with Diffusion Models</title>
      <link>https://varun-ml.github.io/posts/diffusion-models/denoising-diffusion-models-3/</link>
      <pubDate>Fri, 09 Dec 2022 17:38:58 +0530</pubDate>
      
      <guid>https://varun-ml.github.io/posts/diffusion-models/denoising-diffusion-models-3/</guid>
      <description>Notebook Github Link Colab EMINST Denoising and Conditional generation Colab EMNIST Introduction We have introduced most of the concepts in the previous two blogs. In this blog post, we will see how the concepts translate to code. If you want to check out the earlier posts, you can find them here, diffusion model intro 1, and diffusion model intro 2.
EMNIST dataset Extended-MNIST dataset, as the name suggests, is an extension of the popular MNIST dataset.</description>
    </item>
    
    <item>
      <title>Diffusion Model Jupyter and Colab Notebooks</title>
      <link>https://varun-ml.github.io/posts/diffusion-models/diffusion-models-notebooks/</link>
      <pubDate>Mon, 05 Dec 2022 12:49:17 +0530</pubDate>
      
      <guid>https://varun-ml.github.io/posts/diffusion-models/diffusion-models-notebooks/</guid>
      <description>The code accompanying the tutorials on denoising diffusion models.
Notebook Description GitHub Link Colab Basic: Predicting Original Distribution Introduces Diffusion model concepts with PyTorch Vanilla Implementation Predicting Error and Score Function Diffusion models while predicting error with PyTorch Error / Score Prediction Classifier free Guidance and other improvements Diffusion models with Time Step Embeddings, Classifier Free Guidance, and time step striding to improve sampling from a diffusion model Advanced concepts EMINST Denoising and Conditional generation Working on EMNIST data Colab EMNIST If you have suggestions, please feel free to contribute to GitHub Repo.</description>
    </item>
    
    <item>
      <title>Cohere Research Scholar Notebook</title>
      <link>https://varun-ml.github.io/posts/cohere/cohere-research-scholar/</link>
      <pubDate>Mon, 07 Nov 2022 01:17:43 +0530</pubDate>
      
      <guid>https://varun-ml.github.io/posts/cohere/cohere-research-scholar/</guid>
      <description> Notebook Github Link Colab Co;here Research Scholar Assignment Github </description>
    </item>
    
  </channel>
</rss>
